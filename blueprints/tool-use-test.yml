# Tool-Use: Trace-Only â€“ Minimal Sanity Suite (v2)
title: "Tool-Use: Trace-Only Sanity (v2)"
description: "Validates strict TOOL_CALL parsing and core tool-use checks without execution."
models:
  - openrouter:openai/gpt-4o-mini

toolUse:
  enabled: true
  mode: trace-only
  maxSteps: 3
  outputFormat: json-line

tools:
  - name: calculator
    description: "Safely evaluate arithmetic expressions."
    schema:
      type: object
      properties:
        expression: { type: string }
      required: [expression]
  - name: search
    description: "Search a small in-memory index."
    schema:
      type: object
      properties:
        query: { type: string }
      required: [query]
  - name: retrieve
    description: "Retrieve a document by id."
    schema:
      type: object
      properties:
        docId: { type: string }
      required: [docId]

---
# 1) Single call; arg normalization
- id: calc-happy
  messages:
    - system: |
        Emit each tool call on its own line and nothing else:
        TOOL_CALL {"name":"<tool>","arguments":{...}}
    - user: |
        Compute (312*49) - 777 using the calculator tool.
        Emit exactly one TOOL_CALL with that expression.
  should:
    - $tool_called: "calculator"
    - $tool_args_match: { name: "calculator", where: { expression: "(312*49)-777" }, normalizeWhitespace: true }
    - $tool_call_count_between: [1, 1, "calculator"]

---
# 2) Ordered two-call sequence; exact retrieve id; exact search query
- id: search-then-retrieve
  messages:
    - system: |
        Emit each tool call on its own line and nothing else:
        TOOL_CALL {"name":"<tool>","arguments":{...}}
    - user: |
        You have a mini index:
          - { "id": "41", "title": "Article 1" }
          - { "id": "42", "title": "Article 2" }
        1) Call search with query exactly "Article 2".
        2) Then call retrieve with docId "42".
        Emit exactly two TOOL_CALL lines in that order.
  should:
    - $tool_call_order: ["search", "retrieve"]
    - $tool_args_match: { name: "search",   where: { query: "Article 2" } }
    - $tool_args_match: { name: "retrieve", where: { docId: "42" } }
    - $tool_call_count_between: [2, 2]

---
# 3) Zero calls
- id: no-calls
  messages:
    - system: |
        If no call is needed, output exactly: OK
        Otherwise, emit TOOL_CALL {"name":"<tool>","arguments":{...}}
    - user: |
        Do NOT call any tool. Output only: OK
  should:
    - $tool_call_count_between: [0, 0]